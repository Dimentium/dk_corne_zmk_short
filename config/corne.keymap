/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        lock {
            bindings = <&kp LG(L)>;
            key-positions = <39 41>;
            layers = <0>;
        };

        sd2shift {
            bindings = <&sk LSHIFT>;
            key-positions = <14 15>;
            layers = <0 1 2>;
        };

        kl2shift {
            bindings = <&sk RSHIFT>;
            key-positions = <20 21>;
            layers = <0 2>;
        };

        we2escape {
            bindings = <&kp ESC>;
            key-positions = <2 3>;
            layers = <0 1 2>;
        };

        io2escape {
            bindings = <&kp ESC>;
            key-positions = <8 9>;
            layers = <0 1 2>;
        };

        xc2enter {
            bindings = <&kp ENTER>;
            key-positions = <26 27>;
            layers = <0 1 2>;
        };

        as2ctrl {
            bindings = <&sk LCTRL>;
            key-positions = <13 14>;
            layers = <0 1 2>;
        };

        df2win {
            bindings = <&sk LEFT_WIN>;
            key-positions = <16 15>;
            layers = <0 1 2>;
        };

        vmcfree {
            bindings = <&sk LALT>;
            key-positions = <13 16>;
            layers = <0 1 2>;
        };

        asd2ctrlshift {
            bindings = <&sk LC(LSHFT)>;
            key-positions = <13 14 15>;
            layers = <0 1 2>;
        };

        freevmc {
            bindings = <&kp LC(LALT)>;
            key-positions = <36 38>;
            layers = <0>;
        };

        combotaurus {
            bindings = <&makrotaurus>;
            key-positions = <5 4>;
            layers = <1>;
        };

        commadot2enter {
            bindings = <&kp ENTER>;
            key-positions = <32 33>;
            layers = <0 1 2>;
        };

        dotslash2shiftenter {
            bindings = <&kp LS(ENTER)>;
            key-positions = <33 34>;
            layers = <0 1 2>;
        };

        mcomma2ctrlenter {
            bindings = <&kp LC(ENTER)>;
            key-positions = <31 32>;
            layers = <0 1 2>;
        };

        ui2tab {
            bindings = <&kp TAB>;
            key-positions = <7 8>;
            layers = <0 1 2>;
        };
    };

    macros {
        makrotaurus: makrotaurus {
            compatible = "zmk,behavior-macro";
            label = "new_macro";
            #binding-cells = <0>;
            bindings = <&kp LS(T) &kp A &kp U &kp R &kp U &kp S>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        base {
            bindings = <
  &none   &kp Q   &kp W                      &kp E   &kp R      &kp T                   &kp Y   &kp U                 &kp I    &kp O     &kp P   &none
  &none   &kp A   &kp S                      &kp D   &kp F      &kp G                   &kp H   &kp J                 &kp K    &kp L  &kp SEMI   &none
  &none   &kp Z   &kp X                      &kp C   &kp V      &kp B                   &kp N   &kp M             &kp COMMA  &kp DOT  &kp FSLH   &none
                         &mt LEFT_SHIFT LC(LS(N1))   &mo 2  &kp SPACE          &mt RALT ENTER   &mo 1  &mt RSHFT LC(LS(N2))
            >;
        };

        nav {
            bindings = <
  &none  &kp C_BRI_DN    &kp C_BRI_UP     &none     &none      &none          &kp PG_UP         &kp HOME         &kp END          &kp INS        &kp DEL   &none
  &none     &kp LCTRL  &kp LEFT_SHIFT  &kp LGUI  &kp LALT  &kp K_APP           &kp LEFT         &kp DOWN          &kp UP        &kp RIGHT  &kp BACKSPACE   &none
  &none      &kp CAPS           &none     &none     &none      &none          &kp PG_DN  &kp PRINTSCREEN  &kp SCROLLLOCK  &kp PAUSE_BREAK        &kp TAB   &none
                                          &none     &none      &none              &none            &none           &none
            >;
        };

        ext {
            bindings = <
  &none    &kp F1     &kp F2     &kp F3     &kp F4   &kp F5            &kp F6     &kp F7           &kp F8   &kp F9        &kp F10   &none
  &none    &kp N1     &kp N2     &kp N3     &kp N4   &kp N5            &kp N6     &kp N7           &kp N8   &kp N9         &kp N0   &none
  &none  &sk RALT  &kp GRAVE  &kp MINUS  &kp EQUAL  &kp F11           &kp F12   &kp LBKT         &kp RBKT  &kp SQT  &kp BACKSLASH   &none
                                  &none      &none    &none          &kp RALT  &kp RSHFT  &kp RIGHT_SHIFT
            >;
        };
    };
};
