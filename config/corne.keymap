/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */
/* THIS FILE WAS GENERATED!
 *
 * This file was generated automatically. You may or may not want to
 * edit it directly.
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

/ {
    combos {
        compatible = "zmk,combos";

        lock {
            bindings = <&kp LG(L)>;
            key-positions = <39 41>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
     &kp GRAVE   &kp Q   &kp W                      &kp E   &kp R           &kp T                   &kp Y   &kp U                       &kp I    &kp O     &kp P  &kp LBKT
 &mt LCTRL ESC   &kp A   &kp S                      &kp D   &kp F           &kp G                   &kp H   &kp J                       &kp K    &kp L  &kp SEMI   &kp SQT
      &kp BSLH   &kp Z   &kp X                      &kp C   &kp V           &kp B                   &kp N   &kp M                   &kp COMMA  &kp DOT  &kp FSLH  &kp RBKT
                                &mt LEFT_SHIFT LC(LS(N1))   &mo 2  &mt RALT SPACE          &mt RALT SPACE   &mo 1  &mt RIGHT_SHIFT LC(LS(N2))
            >;
        };

        layer_nav_layer {
            bindings = <
 &kp CAPSLOCK  &kp C_BRI_DN      &kp C_MUTE  &kp C_VOL_DN  &kp C_VOL_UP  &kp C_BRI_UP          &kp PG_UP         &kp HOME         &kp END          &kp INS        &kp DEL  &kp LC(ENTER)
   &caps_word     &kp LCTRL  &kp LEFT_SHIFT      &kp LGUI      &kp LALT     &kp K_APP           &kp LEFT         &kp DOWN          &kp UP        &kp RIGHT  &kp BACKSPACE      &kp ENTER
        &none         &none        &kp C_RW      &kp C_PP      &kp C_FF         &none          &kp PG_DN  &kp PRINTSCREEN  &kp SCROLLLOCK  &kp PAUSE_BREAK        &kp TAB  &kp LS(ENTER)
                                                    &none         &mo 3       &kp TAB              &none            &none           &none
            >;
        };

        layer_num_layer {
            bindings = <
   &kp F12     &kp F1     &kp F2    &kp F3    &kp F4       &kp F5                     &kp F6        &kp F7              &kp F8              &kp F9    &kp F10    &kp F11
 &kp EQUAL     &kp N1     &kp N2    &kp N3    &kp N4       &kp N5                     &kp N6        &kp N7              &kp N8              &kp N9     &kp N0  &kp MINUS
   &kp TAB  &kp LCTRL  &kp LSHFT  &kp LGUI  &kp LALT  &kp LA(TAB)                  &kp K_APP  &kp LEFT_ALT  &mt LEFT_GUI COMMA  &mt LEFT_SHIFT DOT  &kp LCTRL      &none
                                     &none     &none        &none          &mt RIGHT_ALT TAB         &mo 3     &kp RIGHT_SHIFT
            >;
        };

        layer_mod_layer {
            bindings = <
 &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4             &trans    &trans        &trans     &trans     &trans  &trans
      &none     &kp LCTRL     &kp LSHFT      &kp LGUI      &kp LALT        &trans          &kp K_APP  &kp LALT  &kp LEFT_GUI  &kp LSHFT  &kp LCTRL   &none
 &bt BT_PRV    &bt BT_NXT        &trans        &trans        &trans  &out OUT_TOG             &trans    &trans        &trans     &trans     &trans  &trans
                                                &none         &none         &none              &none     &none         &none
            >;
        };
    };
};
